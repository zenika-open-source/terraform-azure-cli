name: release

# trigger on published release
on:
  release:
    types: [published]

jobs:
  load_versions:
    uses: ./.github/workflows/include_supported-versions.yml

  build_push_release:
    runs-on: ubuntu-20.04
    needs:
      - load_versions

    strategy:
      matrix: ${{ fromJSON(needs.load_versions.outputs.matrix) }}

    env:
      IMAGE_NAME: "terraform-azure-cli"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get and save release tag
        run: echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image release tag
        run: echo "IMAGE_RELEASE_TAG=release-${RELEASE_TAG}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Build image
        run: docker image build . --file Dockerfile --build-arg TERRAFORM_VERSION=${{ matrix.tf_version }} --build-arg AZURE_CLI_VERSION=${{ matrix.azcli_version }} --tag ${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Login to Docker Hub registry
        run: echo '${{ secrets.DOCKERHUB_PASS }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image to registry
        run: |
              docker images
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Save image
        run: docker image save -o ${IMAGE_NAME}-${IMAGE_RELEASE_TAG}.tar ${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_RELEASE_TAG }}
          path: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_RELEASE_TAG }}.tar
